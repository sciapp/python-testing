FROM alpine:latest as builder
LABEL maintainer="Ingo Meyer <i.meyer@fz-juelich.de>"

ENV PYENV_ROOT "/usr/local/pyenv"
ENV PATH "${PYENV_ROOT}/bin:${PYENV_ROOT}/shims:${PATH}"
ENV LANG C.UTF-8

RUN apk --no-cache add bash \
                       build-base \
                       bzip2-dev \
                       ca-certificates \
                       curl \
                       git \
                       libffi-dev \
                       linux-headers \
                       openssl-dev \
                       ncurses-dev \
                       patch \
                       readline-dev \
                       sqlite-dev \
                       xz-dev \
                       zlib-dev

RUN curl -o "/tmp/pyenv-master.tar.gz" -L "https://github.com/pyenv/pyenv/archive/master.tar.gz" && \
    tar -C /tmp/ -xvf "/tmp/pyenv-master.tar.gz" && \
    mv "/tmp/pyenv-master" "${PYENV_ROOT}"

COPY patches/alpine /tmp/patches

RUN set -e; \
    installed_python_versions=""; \
    for version in 2.7 3.5 3.6 3.7 3.8 3.9; do \
        latest_version="$(pyenv install --list | awk "NR > 1 && \$1 ~ /^$(echo "${version}" | sed 's/\./\\./g')(\.[0-9.]*)?(-dev)?$/" | tail -1 | tr -d ' ')"; \
        if [ -f "/tmp/patches/posix_close_${version}.patch" ]; then \
            pyenv install --patch "${latest_version}" < "/tmp/patches/posix_close_${version}.patch"; \
        else \
            pyenv install "${latest_version}"; \
        fi; \
        installed_python_versions="${latest_version} ${installed_python_versions}"; \
    done; \
    pyenv global ${installed_python_versions}

RUN pip install -U pip && \
    pip install tox

FROM alpine:latest

ENV PYENV_ROOT "/usr/local/pyenv"
ENV PATH "${PYENV_ROOT}/bin:${PYENV_ROOT}/shims:${PATH}"

RUN apk --no-cache add bash \
                       bzip2 \
                       ca-certificates \
                       libffi \
                       openssl \
                       ncurses \
                       readline \
                       sqlite \
                       xz \
                       zlib

COPY --from=builder "${PYENV_ROOT}" "${PYENV_ROOT}"
COPY docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh

ENTRYPOINT ["/usr/local/bin/docker-entrypoint.sh"]
CMD ["/bin/bash"]
